{"version":3,"sources":["webpack:///../../../src/components/VWindow/VWindowItem.ts","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VWindow/VWindow.ts"],"names":["baseMixins","name","directives","Touch","props","disabled","reverseTransition","type","Boolean","default","undefined","transition","value","required","data","isActive","inTransition","computed","classes","this","computedTransition","windowGroup","methods","genDefaultSlot","$slots","genWindowItem","$createElement","staticClass","class","on","$listeners","onAfterTransition","transitionCount","onBeforeTransition","$el","onTransitionCancelled","onEnter","el","render","h","beforeEnter","afterEnter","enterCancelled","beforeLeave","afterLeave","leaveCancelled","enter","showLazyContent","model","prop","event","chips","clearable","counterSizeString","counterString","hideInput","placeholder","prependIcon","readonly","showSize","validator","v","includes","smallChips","truncateLength","Number","val","computedCounterValue","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","map","file","truncatedText","hasChips","watch","handler","immediate","$refs","input","clearableCallback","genChips","small","genControl","display","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","selection","genTextFieldSlot","node","click","onInput","files","e","onKeyDown","truncateText","str","charsKeepOneSide","Math","defaultMenuProps","offsetY","offsetOverflow","VSelect","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","item","hasDisplayedItems","hideSelected","filteredItems","some","currentRange","selectedItem","String","getText","internalSearch","allItems","isAnyValueAllowed","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","isFocused","document","isMenuActive","oldVal","activateMenu","created","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","VTextField","mergeData","attrs","autocomplete","domProps","genInputSlot","slot","hasSlot","onClick","isAppendInner","target","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","delimiters","returnObject","editingIndex","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","setValue","updateEditing","updateCombobox","isUsingSlot","updateTags","menuIndex","onPaste","pastedItemText","findExistingIndex","$","getOwnPropertyDescriptor","f","toLength","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","nativeEndsWith","endsWith","min","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","prototype","writable","proto","forced","searchString","that","endPosition","arguments","len","end","search","call","slice","functional","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","listeners","center","VIcon","dark","light","mixins","inset","themeClasses","action","dense","itemDisabled","Array","itemValue","noDataText","parsedItems","tileActiveClass","Object","setTextColor","staticNoDataTile","tile","role","mousedown","VListItem","genTileContent","genAction","VListItemAction","color","inputValue","genDivider","VDivider","genFilteredText","getMaskedCharacters","start","genHighlight","middle","genHeader","genTile","id","_uid","activeClass","parent","scopedSlot","needsTile","innerHTML","VList","itemsLength","tabindex","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","ClickOutside","appendIcon","attach","cacheItems","deletableChips","disableLookup","eager","itemColor","openOnClear","cachedItems","menuIsBooted","lastItem","keyboardLookupPrefix","keyboardLookupLastTime","filterDuplicates","concat","computedOwns","closeConditional","include","dynamicHeight","scopeId","$vnode","context","select","scopedSlots","staticList","console","VSelectList","virtualizedItems","normalisedProps","split","acc","p","nudgeBottom","window","blur","getContent","contains","uniqueValues","arr","isDisabled","VChip","close","key","JSON","genCommaSelection","last","selections","prefix","genAffix","suffix","VInput","keypress","onKeyPress","genHiddenInput","attrs$","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelection","genSlotSelection","selected","isInteractive","onBlur","$emit","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","setTimeout","isReadonly","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","values","oldValue","appendInner","active","chipGroup","closeIcon","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","breakingProps","original","replacement","genFilter","left","genClose","right","genContent","setBackgroundColor","provide","continuous","mandatory","nextIcon","prevIcon","reverse","showArrows","showArrowsOnHover","touch","touchless","vertical","internalHeight","transitionHeight","isBooted","isReverse","axis","internalReverse","direction","hasActiveItems","hasNext","internalIndex","hasPrev","rtl","updateReverse","mounted","genContainer","style","height","large","genControlIcons","icons","getNextIndex","getPrevIndex","prevIndex","next","prev"],"mappings":"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","file":"js/books~libraries~user-legacy.aaef8866.js","sourcesContent":["// Components\nimport VWindow from './VWindow'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  GroupableFactory('windowGroup', 'v-window-item', 'v-window')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  windowGroup: InstanceType<typeof VWindow>\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-window-item',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    value: {\n      required: false,\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n      inTransition: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return this.groupClasses\n    },\n    computedTransition (): string | boolean {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined'\n          ? this.transition || ''\n          : this.windowGroup.computedTransition\n      }\n\n      return typeof this.reverseTransition !== 'undefined'\n        ? this.reverseTransition || ''\n        : this.windowGroup.computedTransition\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$slots.default\n    },\n    genWindowItem () {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n        on: this.$listeners,\n      }, this.genDefaultSlot())\n    },\n    onAfterTransition () {\n      if (!this.inTransition) {\n        return\n      }\n\n      // Finalize transition state.\n      this.inTransition = false\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--\n\n        // Remove container height if we are out of transition.\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined\n        }\n      }\n    },\n    onBeforeTransition () {\n      if (this.inTransition) {\n        return\n      }\n\n      // Initialize transition state here.\n      this.inTransition = true\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight)\n      }\n      this.windowGroup.transitionCount++\n    },\n    onTransitionCancelled () {\n      this.onAfterTransition() // This should have the same path as normal transition end.\n    },\n    onEnter (el: HTMLElement) {\n      if (!this.inTransition) {\n        return\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return\n        }\n\n        // Set transition target height.\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      props: {\n        name: this.computedTransition,\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n\n        // Enter handler for height transition.\n        enter: this.onEnter,\n      },\n    }, this.showLazyContent(() => [this.genWindowItem()]))\n  },\n})\n","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: classes,\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), children)\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VWindow.sass'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue/types/vnode'\nimport { PropType } from 'vue'\nimport { TouchHandlers } from 'vuetify/types'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-window',\n\n  directives: { Touch },\n\n  provide (): object {\n    return {\n      windowGroup: this,\n    }\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    continuous: Boolean,\n    mandatory: {\n      type: Boolean,\n      default: true,\n    },\n    nextIcon: {\n      type: [Boolean, String],\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String],\n      default: '$prev',\n    },\n    reverse: Boolean,\n    showArrows: Boolean,\n    showArrowsOnHover: Boolean,\n    touch: Object as PropType<TouchHandlers>,\n    touchless: Boolean,\n    value: {\n      required: false,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      internalHeight: undefined as undefined | string, // This can be fixed by child class.\n      transitionHeight: undefined as undefined | string, // Intermediate height during transition.\n      transitionCount: 0, // Number of windows in transition state.\n      isBooted: false,\n      isReverse: false,\n    }\n  },\n\n  computed: {\n    isActive (): boolean {\n      return this.transitionCount > 0\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-window--show-arrows-on-hover': this.showArrowsOnHover,\n      }\n    },\n    computedTransition (): string {\n      if (!this.isBooted) return ''\n\n      const axis = this.vertical ? 'y' : 'x'\n      const reverse = this.internalReverse ? !this.isReverse : this.isReverse\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    },\n    hasActiveItems (): boolean {\n      return Boolean(\n        this.items.find(item => !item.disabled)\n      )\n    },\n    hasNext (): boolean {\n      return this.continuous || this.internalIndex < this.items.length - 1\n    },\n    hasPrev (): boolean {\n      return this.continuous || this.internalIndex > 0\n    },\n    internalIndex (): number {\n      return this.items.findIndex((item, i) => {\n        return this.internalValue === this.getValue(item, i)\n      })\n    },\n    internalReverse (): boolean {\n      return this.$vuetify.rtl ? !this.reverse : this.reverse\n    },\n  },\n\n  watch: {\n    internalIndex (val, oldVal) {\n      this.isReverse = this.updateReverse(val, oldVal)\n    },\n  },\n\n  mounted () {\n    window.requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    genContainer (): VNode {\n      const children = [this.$slots.default]\n\n      if (this.showArrows) {\n        children.push(this.genControlIcons())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-window__container',\n        class: {\n          'v-window__container--is-active': this.isActive,\n        },\n        style: {\n          height: this.internalHeight || this.transitionHeight,\n        },\n      }, children)\n    },\n    genIcon (\n      direction: 'prev' | 'next',\n      icon: string,\n      click: () => void\n    ) {\n      return this.$createElement('div', {\n        staticClass: `v-window__${direction}`,\n      }, [\n        this.$createElement(VBtn, {\n          props: { icon: true },\n          attrs: {\n            'aria-label': this.$vuetify.lang.t(`$vuetify.carousel.${direction}`),\n          },\n          on: { click },\n        }, [\n          this.$createElement(VIcon, {\n            props: { large: true },\n          }, icon),\n        ]),\n      ])\n    },\n    genControlIcons () {\n      const icons = []\n\n      const prevIcon = this.$vuetify.rtl\n        ? this.nextIcon\n        : this.prevIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasPrev &&\n        prevIcon &&\n        typeof prevIcon === 'string'\n      ) {\n        const icon = this.genIcon('prev', prevIcon, this.prev)\n        icon && icons.push(icon)\n      }\n\n      const nextIcon = this.$vuetify.rtl\n        ? this.prevIcon\n        : this.nextIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasNext &&\n        nextIcon &&\n        typeof nextIcon === 'string'\n      ) {\n        const icon = this.genIcon('next', nextIcon, this.next)\n        icon && icons.push(icon)\n      }\n\n      return icons\n    },\n    getNextIndex (index: number): number {\n      const nextIndex = (index + 1) % this.items.length\n      const item = this.items[nextIndex]\n\n      if (item.disabled) return this.getNextIndex(nextIndex)\n\n      return nextIndex\n    },\n    getPrevIndex (index: number): number {\n      const prevIndex = (index + this.items.length - 1) % this.items.length\n      const item = this.items[prevIndex]\n\n      if (item.disabled) return this.getPrevIndex(prevIndex)\n\n      return prevIndex\n    },\n    next () {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasNext) return\n\n      const nextIndex = this.getNextIndex(this.internalIndex)\n      const item = this.items[nextIndex]\n\n      this.internalValue = this.getValue(item, nextIndex)\n    },\n    prev () {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasPrev) return\n\n      const lastIndex = this.getPrevIndex(this.internalIndex)\n      const item = this.items[lastIndex]\n\n      this.internalValue = this.getValue(item, lastIndex)\n    },\n    updateReverse (val: number, oldVal: number) {\n      const lastIndex = this.items.length - 1\n\n      if (val === lastIndex && oldVal === 0) {\n        return true\n      } else if (val === 0 && oldVal === lastIndex) {\n        return false\n      } else {\n        return val < oldVal\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-window',\n      class: this.classes,\n      directives: [] as VNodeDirective[],\n    }\n\n    if (!this.touchless) {\n      const value = this.touch || {\n        left: () => {\n          this.$vuetify.rtl ? this.prev() : this.next()\n        },\n        right: () => {\n          this.$vuetify.rtl ? this.next() : this.prev()\n        },\n        end: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n        start: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n      }\n\n      data.directives.push({\n        name: 'touch',\n        value,\n      })\n    }\n\n    return h('div', data, [this.genContainer()])\n  },\n})\n"],"sourceRoot":""}