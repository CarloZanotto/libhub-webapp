{"version":3,"sources":["webpack:///../../../src/components/VWindow/VWindowItem.ts","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VWindow/VWindow.ts"],"names":["baseMixins","name","directives","Touch","props","disabled","reverseTransition","type","Boolean","default","undefined","transition","value","required","isActive","inTransition","computed","this","windowGroup","methods","$slots","$createElement","staticClass","class","on","$listeners","transitionCount","$el","el","h","computedTransition","beforeEnter","afterEnter","enterCancelled","beforeLeave","afterLeave","leaveCancelled","enter","onEnter","showLazyContent","model","prop","event","chips","clearable","counterSizeString","counterString","hideInput","placeholder","prependIcon","readonly","showSize","validator","v","includes","smallChips","truncateLength","Number","val","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","length","$attrs","hasOwnProperty","map","file","truncatedText","truncateText","watch","immediate","$refs","input","text","index","small","render","display","icon","genIcon","genSlot","children","isDirty","$scopedSlots","selection","hasChips","node","click","files","e","str","charsKeepOneSide","Math","defaultMenuProps","offsetY","offsetOverflow","VSelect","allowOverflow","autoSelectFirst","filter","item","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","selectedIndex","selectedItems","getValue","hideSelected","filteredItems","some","hasItem","selectedItem","String","getText","internalSearch","allItems","searchIsDirty","multiple","hasDisplayedItems","find","i","valueComparator","data","items","document","oldVal","activateMenu","menu","keyCode","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","VTextField","mergeData","attrs","autocomplete","domProps","slot","hasSlot","isAppendInner","target","setSearch","selectedValues","indexOf","currentItem","currentItemText","delimiters","returnObject","editingIndex","delimiter","d","chip","dblclick","getMenuIndex","selectionStart","isUsingSlot","menuIndex","pastedItemText","findExistingIndex","functional","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","listeners","center","VIcon","dark","light","classes","f","mixins","inset","themeClasses","action","dense","itemDisabled","Array","itemValue","noDataText","Object","setTextColor","tile","role","mousedown","VListItem","genTileContent","VListItemAction","color","inputValue","$emit","VDivider","end","getMaskedCharacters","start","genHighlight","middle","id","_uid","activeClass","genAction","parent","scopedSlot","needsTile","innerHTML","genFilteredText","VList","parsedItems","itemsLength","genTile","genHeader","genDivider","tabindex","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","ClickOutside","appendIcon","attach","cacheItems","deletableChips","disableLookup","eager","itemColor","openOnClear","cachedItems","menuIsBooted","isMenuActive","lastItem","keyboardLookupPrefix","keyboardLookupLastTime","filterDuplicates","concat","isFocused","handler","closeConditional","include","getOpenDependentElements","scopeId","$vnode","context","computedOwns","select","selectItem","scopedSlots","console","VSelectList","$_menuProps","computedItems","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","window","onMenuActiveChange","getContent","contains","uniqueValues","arr","isDisabled","VChip","close","onChipInput","key","JSON","last","selections","prefix","genAffix","suffix","VInput","keypress","onKeyPress","attrs$","slots","slotName","listData","VMenu","scroll","onScroll","ref","genSelection","selected","isInteractive","setValue","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","setTimeout","setMenuIndex","isReadonly","onUpDown","onEscDown","onTabDown","onSpaceDown","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","values","oldValue","appendInner","active","chipGroup","closeIcon","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","breakingProps","original","replacement","left","right","hasClose","setBackgroundColor","continuous","mandatory","nextIcon","prevIcon","reverse","showArrows","showArrowsOnHover","touch","touchless","vertical","internalHeight","transitionHeight","isBooted","isReverse","axis","internalReverse","direction","internalIndex","rtl","updateReverse","style","height","large","icons","hasPrev","hasNext","getNextIndex","prevIndex","getPrevIndex"],"mappings":"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","file":"js/books~libraries~user.0daf3c6a.js","sourcesContent":["// Components\nimport VWindow from './VWindow'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  GroupableFactory('windowGroup', 'v-window-item', 'v-window')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  windowGroup: InstanceType<typeof VWindow>\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-window-item',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    value: {\n      required: false,\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n      inTransition: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return this.groupClasses\n    },\n    computedTransition (): string | boolean {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined'\n          ? this.transition || ''\n          : this.windowGroup.computedTransition\n      }\n\n      return typeof this.reverseTransition !== 'undefined'\n        ? this.reverseTransition || ''\n        : this.windowGroup.computedTransition\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$slots.default\n    },\n    genWindowItem () {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n        on: this.$listeners,\n      }, this.genDefaultSlot())\n    },\n    onAfterTransition () {\n      if (!this.inTransition) {\n        return\n      }\n\n      // Finalize transition state.\n      this.inTransition = false\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--\n\n        // Remove container height if we are out of transition.\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined\n        }\n      }\n    },\n    onBeforeTransition () {\n      if (this.inTransition) {\n        return\n      }\n\n      // Initialize transition state here.\n      this.inTransition = true\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight)\n      }\n      this.windowGroup.transitionCount++\n    },\n    onTransitionCancelled () {\n      this.onAfterTransition() // This should have the same path as normal transition end.\n    },\n    onEnter (el: HTMLElement) {\n      if (!this.inTransition) {\n        return\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return\n        }\n\n        // Set transition target height.\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      props: {\n        name: this.computedTransition,\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n\n        // Enter handler for height transition.\n        enter: this.onEnter,\n      },\n    }, this.showLazyContent(() => [this.genWindowItem()]))\n  },\n})\n","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: classes,\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), children)\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VWindow.sass'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue/types/vnode'\nimport { PropType } from 'vue'\nimport { TouchHandlers } from 'vuetify/types'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-window',\n\n  directives: { Touch },\n\n  provide (): object {\n    return {\n      windowGroup: this,\n    }\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    continuous: Boolean,\n    mandatory: {\n      type: Boolean,\n      default: true,\n    },\n    nextIcon: {\n      type: [Boolean, String],\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String],\n      default: '$prev',\n    },\n    reverse: Boolean,\n    showArrows: Boolean,\n    showArrowsOnHover: Boolean,\n    touch: Object as PropType<TouchHandlers>,\n    touchless: Boolean,\n    value: {\n      required: false,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      internalHeight: undefined as undefined | string, // This can be fixed by child class.\n      transitionHeight: undefined as undefined | string, // Intermediate height during transition.\n      transitionCount: 0, // Number of windows in transition state.\n      isBooted: false,\n      isReverse: false,\n    }\n  },\n\n  computed: {\n    isActive (): boolean {\n      return this.transitionCount > 0\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-window--show-arrows-on-hover': this.showArrowsOnHover,\n      }\n    },\n    computedTransition (): string {\n      if (!this.isBooted) return ''\n\n      const axis = this.vertical ? 'y' : 'x'\n      const reverse = this.internalReverse ? !this.isReverse : this.isReverse\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    },\n    hasActiveItems (): boolean {\n      return Boolean(\n        this.items.find(item => !item.disabled)\n      )\n    },\n    hasNext (): boolean {\n      return this.continuous || this.internalIndex < this.items.length - 1\n    },\n    hasPrev (): boolean {\n      return this.continuous || this.internalIndex > 0\n    },\n    internalIndex (): number {\n      return this.items.findIndex((item, i) => {\n        return this.internalValue === this.getValue(item, i)\n      })\n    },\n    internalReverse (): boolean {\n      return this.$vuetify.rtl ? !this.reverse : this.reverse\n    },\n  },\n\n  watch: {\n    internalIndex (val, oldVal) {\n      this.isReverse = this.updateReverse(val, oldVal)\n    },\n  },\n\n  mounted () {\n    window.requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    genContainer (): VNode {\n      const children = [this.$slots.default]\n\n      if (this.showArrows) {\n        children.push(this.genControlIcons())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-window__container',\n        class: {\n          'v-window__container--is-active': this.isActive,\n        },\n        style: {\n          height: this.internalHeight || this.transitionHeight,\n        },\n      }, children)\n    },\n    genIcon (\n      direction: 'prev' | 'next',\n      icon: string,\n      click: () => void\n    ) {\n      return this.$createElement('div', {\n        staticClass: `v-window__${direction}`,\n      }, [\n        this.$createElement(VBtn, {\n          props: { icon: true },\n          attrs: {\n            'aria-label': this.$vuetify.lang.t(`$vuetify.carousel.${direction}`),\n          },\n          on: { click },\n        }, [\n          this.$createElement(VIcon, {\n            props: { large: true },\n          }, icon),\n        ]),\n      ])\n    },\n    genControlIcons () {\n      const icons = []\n\n      const prevIcon = this.$vuetify.rtl\n        ? this.nextIcon\n        : this.prevIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasPrev &&\n        prevIcon &&\n        typeof prevIcon === 'string'\n      ) {\n        const icon = this.genIcon('prev', prevIcon, this.prev)\n        icon && icons.push(icon)\n      }\n\n      const nextIcon = this.$vuetify.rtl\n        ? this.prevIcon\n        : this.nextIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasNext &&\n        nextIcon &&\n        typeof nextIcon === 'string'\n      ) {\n        const icon = this.genIcon('next', nextIcon, this.next)\n        icon && icons.push(icon)\n      }\n\n      return icons\n    },\n    getNextIndex (index: number): number {\n      const nextIndex = (index + 1) % this.items.length\n      const item = this.items[nextIndex]\n\n      if (item.disabled) return this.getNextIndex(nextIndex)\n\n      return nextIndex\n    },\n    getPrevIndex (index: number): number {\n      const prevIndex = (index + this.items.length - 1) % this.items.length\n      const item = this.items[prevIndex]\n\n      if (item.disabled) return this.getPrevIndex(prevIndex)\n\n      return prevIndex\n    },\n    next () {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasNext) return\n\n      const nextIndex = this.getNextIndex(this.internalIndex)\n      const item = this.items[nextIndex]\n\n      this.internalValue = this.getValue(item, nextIndex)\n    },\n    prev () {\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasPrev) return\n\n      const lastIndex = this.getPrevIndex(this.internalIndex)\n      const item = this.items[lastIndex]\n\n      this.internalValue = this.getValue(item, lastIndex)\n    },\n    updateReverse (val: number, oldVal: number) {\n      const lastIndex = this.items.length - 1\n\n      if (val === lastIndex && oldVal === 0) {\n        return true\n      } else if (val === 0 && oldVal === lastIndex) {\n        return false\n      } else {\n        return val < oldVal\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-window',\n      class: this.classes,\n      directives: [] as VNodeDirective[],\n    }\n\n    if (!this.touchless) {\n      const value = this.touch || {\n        left: () => {\n          this.$vuetify.rtl ? this.prev() : this.next()\n        },\n        right: () => {\n          this.$vuetify.rtl ? this.next() : this.prev()\n        },\n        end: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n        start: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n      }\n\n      data.directives.push({\n        name: 'touch',\n        value,\n      })\n    }\n\n    return h('div', data, [this.genContainer()])\n  },\n})\n"],"sourceRoot":""}